name: Workflow checks

on:
  push:
    branches:
      - master
      - smk_workflow_catalog
      - pooling-dev

jobs:
  # WORK
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Formatting
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true

  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Linting
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./Snakefile
          stagein: "mamba env remove -n snakemake && mamba create -y -n snakemake -c conda-forge -c bioconda unzip snakemake pandas pysam tqdm imagemagick && source activate snakemake && ls -l && pwd"
          args: "--lint --configfile .tests/config/test_config.yaml"
  Testing:
    runs-on: ubuntu-latest
    # needs:
    #   - Linting
    #   - Formatting
    steps:
      - uses: actions/checkout@v2
      - name: Testing data
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./Snakefile
          stagein: "mamba env remove -n snakemake && mamba create -y -n snakemake -c conda-forge -c bioconda snakemake pandas pysam tqdm imagemagick && source activate snakemake"
          args: "--cores 2 --configfile .tests/config/test_config.yaml  --use-conda"
      - name: Testing report
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./Snakefile
          stagein: "mamba env remove -n snakemake && mamba create -y -n snakemake -c conda-forge -c bioconda snakemake pandas pysam tqdm imagemagick && source activate snakemake"
          args: "--cores 2 --configfile .tests/config/test_config.yaml --use-conda --report .tests/output/report.zip"

      #     - name: Set up Python 3.8
      #       uses: actions/setup-python@v2
      #       with:
      #         python-version: 3.8
      #     - name: Add conda to system path
      #       run: |
      #         # $CONDA is an environment variable pointing to the root of the miniconda directory
      #         echo $CONDA/bin >> $GITHUB_PATH
      #     - name: Install dependencies
      #       run: |
      #         conda install -c conda-forge mamba
      #     - name: Setup snakemake
      #       run: |
      #         mamba create -n mosaicatcher_env -c conda-forge -c bioconda pandas tqdm pysam snakemake && source activate mosaicatcher_env
      #     - name: Test
      #       run: |
      #         snakemake --cores 12 --config mode=mosaiclassifier plot=True chromosomes="[chr21]" --use-conda --latency-wait 60

      # - name: Downloading data
      #   uses: snakemake/snakemake-github-action@v1.22.0
      #   with:
      #     directory: .
      #     snakefile: ./Snakefile
      #     stagein: "mamba env remove -n snakemake && mamba create -y -n snakemake -c conda-forge -c bioconda unzip snakemake pandas pysam tqdm imagemagick && source activate snakemake "
      #     args: "--cores 1 --config mode=download_data dl_external_files=True"
